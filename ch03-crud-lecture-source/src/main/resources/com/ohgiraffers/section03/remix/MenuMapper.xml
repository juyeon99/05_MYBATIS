<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    remix Mapper 조건
    1. DAO 인터페이스와 동일한 패키지에 위치
    2. DAO 인터페이스의 풀네임을 namespace로 지정
    3. mapper 인터페이스와 xml의 이름 동일 (ex. MenuMapper)
    4. 작성한 메소드의 이름과 id가 일치하고, 리턴타입이 일치하는 쿼리문을 모두 작성
-->
<mapper namespace="com.ohgiraffers.section03.remix.MenuMapper">
    <resultMap id="menuResultMap" type="com.ohgiraffers.section03.remix.MenuDTO">
        <id property="code" column="menu_code"/>
        <result property="name" column="menu_name"/>
        <result property="price" column="menu_price"/>
        <result property="categoryCode" column="category_code"/>
        <result property="orderableStatus" column="orderable_status"/>
    </resultMap>

    <select id="selectAllMenu" resultMap="menuResultMap">
        SELECT menu_code, menu_name, menu_price, category_code, orderable_status
        FROM tbl_menu
        WHERE orderable_status = 'Y'
        ORDER BY menu_code
    </select>

    <select id="selectMenuByCode" parameterType="_int" resultMap="menuResultMap">
        SELECT menu_code, menu_name, menu_price, category_code, orderable_status
        FROM tbl_menu
        WHERE menu_code = #{code}
    </select>

    <insert id="insertMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">
        INSERT INTO tbl_menu (menu_name, menu_price, category_code, orderable_status)
        VALUES (#{name},#{price},#{categoryCode},'Y')
    </insert>

    <update id="updateMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">
        UPDATE tbl_menu
        SET menu_name = #{name},
        menu_price = #{price},
        category_code = #{categoryCode}
        WHERE menu_code = #{code}
    </update>

    <delete id="deleteMenu" parameterType="_int">
        DELETE
        FROM tbl_menu
        WHERE menu_code = #{code}
    </delete>
</mapper>